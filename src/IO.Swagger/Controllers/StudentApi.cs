/*
 * Swagger Petstore - OpenAPI 3.0
 *
 * This is an opeapi specification for lab project 1  Made by _Oleksandr Myroshnychenko_  Group - 6.04.121.10.19.2
 *
 * OpenAPI spec version: 1.0.11
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class StudentApiController : ControllerBase
    { 
        /// <summary>
        /// Returns all students from db
        /// </summary>
        /// <response code="200">successful operation</response>
        [HttpGet]
        [Route("//api/student")]
        [ValidateModelState]
        [SwaggerOperation("ApiStudentGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Student>), description: "successful operation")]
        public virtual IActionResult ApiStudentGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Student>));
            string exampleJson = null;
            exampleJson = "[ {\n  \"Address\" : \"Ukraine, Kharkiv\",\n  \"FirstName\" : \"Oleksandr\",\n  \"Phone\" : \"+380502014596\",\n  \"Id\" : 1,\n  \"LastName\" : \"Myroshnychenko\",\n  \"MiddleName\" : \"Sergeevich\"\n}, {\n  \"Address\" : \"Ukraine, Kharkiv\",\n  \"FirstName\" : \"Oleksandr\",\n  \"Phone\" : \"+380502014596\",\n  \"Id\" : 1,\n  \"LastName\" : \"Myroshnychenko\",\n  \"MiddleName\" : \"Sergeevich\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Student>>(exampleJson)
                        : default(List<Student>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Deletes a student
        /// </summary>
        /// <remarks>delete the student by id</remarks>
        /// <param name="id">Id of student that needs to be deleted</param>
        /// <response code="200">Student was successfully deleted</response>
        [HttpDelete]
        [Route("//api/student/{id}")]
        [ValidateModelState]
        [SwaggerOperation("ApiStudentIdDelete")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Student>), description: "Student was successfully deleted")]
        public virtual IActionResult ApiStudentIdDelete([FromRoute][Required]int? id)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Student>));
            string exampleJson = null;
            exampleJson = "[ {\n  \"Address\" : \"Ukraine, Kharkiv\",\n  \"FirstName\" : \"Oleksandr\",\n  \"Phone\" : \"+380502014596\",\n  \"Id\" : 1,\n  \"LastName\" : \"Myroshnychenko\",\n  \"MiddleName\" : \"Sergeevich\"\n}, {\n  \"Address\" : \"Ukraine, Kharkiv\",\n  \"FirstName\" : \"Oleksandr\",\n  \"Phone\" : \"+380502014596\",\n  \"Id\" : 1,\n  \"LastName\" : \"Myroshnychenko\",\n  \"MiddleName\" : \"Sergeevich\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Student>>(exampleJson)
                        : default(List<Student>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Finds student by its id
        /// </summary>
        /// <param name="id">Id of student that needs to return</param>
        /// <response code="200">successful operation</response>
        [HttpGet]
        [Route("//api/student/{id}")]
        [ValidateModelState]
        [SwaggerOperation("ApiStudentIdGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Student>), description: "successful operation")]
        public virtual IActionResult ApiStudentIdGet([FromRoute][Required]int? id)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Student>));
            string exampleJson = null;
            exampleJson = "[ {\n  \"Address\" : \"Ukraine, Kharkiv\",\n  \"FirstName\" : \"Oleksandr\",\n  \"Phone\" : \"+380502014596\",\n  \"Id\" : 1,\n  \"LastName\" : \"Myroshnychenko\",\n  \"MiddleName\" : \"Sergeevich\"\n}, {\n  \"Address\" : \"Ukraine, Kharkiv\",\n  \"FirstName\" : \"Oleksandr\",\n  \"Phone\" : \"+380502014596\",\n  \"Id\" : 1,\n  \"LastName\" : \"Myroshnychenko\",\n  \"MiddleName\" : \"Sergeevich\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Student>>(exampleJson)
                        : default(List<Student>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Add a student to db
        /// </summary>
        /// <param name="entityData">Data that will be added to db as a student</param>
        /// <response code="200">successful operation</response>
        [HttpPost]
        [Route("//api/student")]
        [ValidateModelState]
        [SwaggerOperation("ApiStudentPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(Student), description: "successful operation")]
        public virtual IActionResult ApiStudentPost([FromHeader]EntityData entityData)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Student));
            string exampleJson = null;
            exampleJson = "{\n  \"Address\" : \"Ukraine, Kharkiv\",\n  \"FirstName\" : \"Oleksandr\",\n  \"Phone\" : \"+380502014596\",\n  \"Id\" : 1,\n  \"LastName\" : \"Myroshnychenko\",\n  \"MiddleName\" : \"Sergeevich\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Student>(exampleJson)
                        : default(Student);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update an existing student
        /// </summary>
        /// <remarks>Updates an existing student</remarks>
        /// <param name="body">Update an existent student</param>
        /// <response code="200">successful operation</response>
        [HttpPut]
        [Route("//api/student")]
        [ValidateModelState]
        [SwaggerOperation("ApiStudentPut")]
        [SwaggerResponse(statusCode: 200, type: typeof(Student), description: "successful operation")]
        public virtual IActionResult ApiStudentPut([FromBody]Student body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Student));
            string exampleJson = null;
            exampleJson = "{\n  \"Address\" : \"Ukraine, Kharkiv\",\n  \"FirstName\" : \"Oleksandr\",\n  \"Phone\" : \"+380502014596\",\n  \"Id\" : 1,\n  \"LastName\" : \"Myroshnychenko\",\n  \"MiddleName\" : \"Sergeevich\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Student>(exampleJson)
                        : default(Student);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
